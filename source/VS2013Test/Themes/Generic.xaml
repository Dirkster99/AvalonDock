<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="CloseButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="ToolTip" Value="Close"/>
		<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
		<Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}">
						<Path Width="46" Height="32" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" Data="M 18,11 27,20 M 18,20 27,11" Margin="0,2,0,0"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}"/>
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}"/>
						</Trigger>
						<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ToolTip" Value="Maximize"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
		<Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}">
						<Path x:Name="MaximizePath" Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Margin="0,2,0,0"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}"/>
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}"/>
						</Trigger>
						<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
							<Setter Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RestoreDownButton" TargetType="{x:Type Button}">
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="ToolTip" Value="Restore Down"/>
		<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
		<Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}">
						<Path x:Name="RestoreDownPath" Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Margin="0,2,0,0"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}"/>
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}"/>
						</Trigger>
						<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="ToolTip" Value="Minimize"/>
		<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
		<Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}">
						<Path Width="46" Height="32" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" Data="M 18,15 H 28" Margin="0,2,0,0"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}"/>
							<Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}"/>
						</Trigger>
						<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>